version: '3.8'

services:
  mangati.app.server:
    image: ${DOCKER_REGISTRY-}mangatiappserver
    build:
      context: .
      dockerfile: Mangati.App/Mangati.App.Server/Dockerfile
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000;https://+:5001;http://+:8080;https://+:8081
      - ConnectionStrings__DefaultConnection=Server=db;Database=MangatiApp;User Id=sa;Password=${DB_PASSWORD:-YourStr0ngP@ssw0rd};TrustServerCertificate=True
      - UseDockerDatabase=true
    ports:
      - "5000:5000"  # New HTTP port
      - "5001:5001"  # New HTTPS port
      - "8080:8080"  # Original HTTP port
      - "8081:8081"  # Original HTTPS port
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped

  
  mangati.app.client:
    build:
      context: .
      dockerfile: Mangati.App/mangati.app.client/Dockerfile
    ports:
      - "80:80"
    depends_on:
      mangati.app.server:
        condition: service_started
    environment:
      - VITE_API_BASE_URL=http://mangati.app.server:8080/api
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 256M
        reservations:
          cpus: '0.15'
          memory: 128M
    restart: unless-stopped

  db:
    image: mcr.microsoft.com/azure-sql-edge:latest
    environment:
      - ACCEPT_EULA=1
      - MSSQL_SA_PASSWORD=${DB_PASSWORD:-YourStr0ngP@ssw0rd}
    ports:
      - "1433:1433"
    volumes:
      - mangati-db:/var/opt/mssql
    deploy:
      resources:
        limits:
           cpus: '1.0'
           memory: 3G
        reservations:
           cpus: '0.5'
           memory: 1G
    restart: unless-stopped

volumes:
  mangati-db: